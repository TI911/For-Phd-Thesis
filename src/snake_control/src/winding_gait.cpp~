/*
 * winding_gati.cpp
 *
 *  Created on: Sep 22, 2016
 *      Author: TI
 */

#include <ros/ros.h>
#include <cmath>
#include "winding_gait.h"

static int init_flag =1;


/*
 * @fn
 * @brief 
 * @param 
 * @paran 
 * @return なし
 * @detail
*/
void WindingGait::set_alpha(double alpha)
{
	serpenoid_curve.alpha = alpha;
}

/*
 * @fn
 * @brief 
 * @param 
 * @paran 
 * @return なし
 * @detail
*/
void WindingGait::set_l(double l) 
{
	serpenoid_curve.l = l;
}

/*
 * @fn
 * @brief 
 * @param 
 * @paran 
 * @return なし
 * @detail
*/
void WindingGait::set_v(double v)
{
	s_ = serpenoid_curve.v += v * dt_;
}

/*
 * @fn
 * @brief 
 * @param 
 * @paran 
 * @return なし
 * @detail
*/
void WindingGait::print_parameters()
{
	ROS_INFO("* -->  serpenoid_curve.alpha = [%4.3f rad] *", serpenoid_curve.alpha);
	ROS_INFO("* -->  serpenoid_curve.l     = [%4.3f m  ] *", serpenoid_curve.l);
	ROS_INFO("* -->                      s = [%4.3f m  ] *", s_);
	ROS_INFO("--------------------------------------------");
}


/*
 * @fn
 * @brief 
 * @param 
 * @paran 
 * @return なし
 * @detail
*/
void WindingGait::WindingShift(RobotSpec spec)
{
	while(s_ > (pre_s_ + step_s_)){  //

		WindingGait::CalculateCurvature();

		ShiftControlMethod::Shift_Param_Forward(spec);

		pre_s_ = pre_s_ + step_s_;
		WindingGait::CalculateTargetAngleToWinding(spec);
		
	}
	print_parameters();
}

/*
 * @fn
 * @brief 
 * @param 
 * @paran 
 * @return なし
 * @detail
*/
void WindingGait::CalculateCurvature(){

	double a = (M_PI*serpenoid_curve.alpha) / (2*serpenoid_curve.l);
	//double ss = (M_PI/2) * (pre_s_/serpenoid_curve.l);
	kappa_ = a;//*sin(ss);
}

/*
 * @fn
 * @brief 
 * @param 
 * @paran 
 * @return なし
 * @detail
*/
void WindingGait::CalculateTargetAngleToWinding(RobotSpec spec)
{
	snake_model_param.angle.clear();
	for(int i=0; i<num_link_; i++){
		
		if(i%2){  //(奇数番目)
			target_angle_ = 0;   //-2*link_length_*snake_model_param.kappa[i];
					
		}else{    //(偶数番目)
			target_angle_ = 2*link_length_*snake_model_param.kappa[i]*sin(4*M_PI*(M_PI/2) * (pre_s_/serpenoid_curve.l));
		}
		snake_model_param.angle.push_back(target_angle_);
	}
}


